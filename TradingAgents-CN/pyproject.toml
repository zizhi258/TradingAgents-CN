[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tradingagents"
version = "0.1.12"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "akshare>=1.16.98",
    "backtrader>=1.9.78.123",
    "baostock>=0.8.8",
    "chainlit>=2.5.5",
    "chromadb>=1.0.12",
    # "dashscope" 已移除
    "eodhd>=1.0.32",
    "feedparser>=6.0.11",
    "finnhub-python>=2.4.23",
    "langchain-anthropic>=0.3.15",
    "langchain-experimental>=0.3.4",
    "langchain-google-genai>=2.1.5",
    "google-genai>=0.2.0",  # 新版官方Google GenAI SDK
    "langchain-openai>=0.3.23",
    "langgraph>=0.4.8",
    "markdown>=3.4.0",
    "openai>=1.0.0,<2.0.0",
    "pandas>=2.3.0",
    "parsel>=1.10.0",
    "plotly>=5.0.0",
    "kaleido>=0.2.1",
    "praw>=7.8.1",
    "psutil>=6.1.0",
    "pymongo>=4.0.0",
    "pypandoc>=1.11",
    "python-dotenv>=1.0.0",
    "pytdx>=1.72",
    "pytz>=2025.2",
    "questionary>=2.1.0",
    "redis>=6.2.0",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "setuptools>=80.9.0",
    "stockstats>=0.6.5",
    "streamlit>=1.28.0",
    "tqdm>=4.67.1",
    "tushare>=1.4.21",
    "typing-extensions>=4.14.0",
    "yfinance>=0.2.63",
    "apscheduler>=3.10.0",
    "jinja2>=3.1.0",
    "aiohttp>=3.9.0",
    "toml>=0.10.2",
    "numpy>=1.26.0",
]

[project.scripts]
tradingagents = "main:main"

[tool.setuptools.packages.find]
include = ["tradingagents*"]
exclude = ["tests*", "docs*", "scripts*", "data*", "logs*", "reports*", "results*", "eval_results*", "upstream_contribution*"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tradingagents"]
known_third_party = ["streamlit", "langchain", "openai", "anthropic"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.ruff]
# 启用的规则
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]

# 忽略的规则
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # raise from
]

# 行长度限制
line-length = 88

# Python版本
target-version = "py310"

# 排除的文件和目录
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
    "migrations",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # 允许在测试中使用assert
"scripts/*" = ["T201"] # 允许在脚本中使用print
"examples/*" = ["T201"] # 允许在示例中使用print

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = false  # 暂时关闭，逐步启用
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "langchain.*",
    "openai.*",
    "anthropic.*",
    "chromadb.*",
    "pandas.*",
    "yfinance.*",
    "tushare.*",
    "akshare.*"
]
ignore_missing_imports = true
