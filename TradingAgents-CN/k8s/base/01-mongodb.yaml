# =============================================================================
# MongoDB StatefulSet and Service
# =============================================================================
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: tradingagents-cn
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: tradingagents-platform
spec:
  selector:
    app.kubernetes.io/name: mongodb
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: tradingagents-cn
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: tradingagents-platform
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/component: database
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
      containers:
        - name: mongodb
          image: mongo:6.0-jammy
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tradingagents-secrets
                  key: MONGODB_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tradingagents-secrets
                  key: MONGODB_PASSWORD
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: tradingagents-secrets
                  key: MONGODB_DATABASE
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-config
              mountPath: /etc/mongod.conf
              subPath: mongod.conf
              readOnly: true
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-config
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
        labels:
          app.kubernetes.io/name: mongodb
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: fast-ssd
        resources:
          requests:
            storage: 50Gi
---
# MongoDB Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: tradingagents-cn
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: config
data:
  mongod.conf: |
    # Network settings
    net:
      port: 27017
      bindIp: 0.0.0.0
      maxIncomingConnections: 200
      compression:
        compressors: snappy,zstd

    # Storage settings
    storage:
      dbPath: /data/db
      journal:
        enabled: true
        commitIntervalMs: 100
      wiredTiger:
        engineConfig:
          cacheSizeGB: 1
          journalCompressor: snappy
          directoryForIndexes: false
        collectionConfig:
          blockCompressor: snappy
        indexConfig:
          prefixCompression: true

    # Security settings
    security:
      authorization: enabled
      javascriptEnabled: false

    # Operation profiling
    operationProfiling:
      mode: slowOp
      slowOpThresholdMs: 100
      slowOpSampleRate: 1.0

    # Process management
    processManagement:
      timeZoneInfo: /usr/share/zoneinfo

    # Performance settings
    setParameter:
      failIndexKeyTooLong: false
      notablescan: false